{"ast":null,"code":"var _jsxFileName = \"D:\\\\download\\\\240825gestao\\\\gestao\\\\frontend\\\\src\\\\pages\\\\DashboardHome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Grid, Card, CardContent, Typography, Avatar, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TestesModal from '../components/TestesModal';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Construction, People, AttachMoney, Inventory, Science, ExitToApp } from '@mui/icons-material';\nimport { Storefront } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardHome() {\n  _s();\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const {\n    user,\n    hasPermission,\n    logout,\n    isAdmin\n  } = useAuth();\n  const API = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  const [testesCount, setTestesCount] = useState(null);\n  const [testesUrgent, setTestesUrgent] = useState(false);\n  const [testesList, setTestesList] = useState([]); // Gerador\n  const [testesArList, setTestesArList] = useState([]); // Ar Condicionado\n  const [clientes, setClientes] = useState([]);\n  const [testesOffCount, setTestesOffCount] = useState(0);\n  const [testesOkCount, setTestesOkCount] = useState(0);\n  const [openTestesModal, setOpenTestesModal] = useState(false);\n  const [testesFilter, setTestesFilter] = useState('all'); // all | ok | alerta | sem\n  const [testesSortOverdue, setTestesSortOverdue] = useState(false);\n  const [selectedTest, setSelectedTest] = useState(null);\n  const [openTestDetail, setOpenTestDetail] = useState(false);\n  const getClienteNomeById = id => {\n    const c = clientes.find(x => Number(x.id) === Number(id));\n    return c ? c.nome : `Cliente ${id !== null && id !== void 0 ? id : ''}`;\n  };\n  const fetchBothTestes = React.useCallback(async () => {\n    try {\n      const [resGer, resAr] = await Promise.all([fetch(`${API}/testes-loja/`), fetch(`${API}/testes-ar-condicionado/`)]);\n      const [dataGer, dataAr] = await Promise.all([resGer.ok ? resGer.json() : Promise.resolve([]), resAr.ok ? resAr.json() : Promise.resolve([])]);\n      const listGer = Array.isArray(dataGer) ? dataGer : [];\n      const listAr = Array.isArray(dataAr) ? dataAr : [];\n      const count = listGer.length; // métricas do card baseadas em Gerador\n      const off = listGer.filter(t => (t.status || '').toString().toUpperCase() === 'OFF').length;\n      const ok = count - off;\n      setTestesList(listGer);\n      setTestesArList(listAr);\n      setTestesCount(count);\n      setTestesOffCount(off);\n      setTestesOkCount(ok);\n      setTestesUrgent(off > 0);\n    } catch (e) {\n      setTestesList([]);\n      setTestesArList([]);\n      setTestesCount(0);\n      setTestesOffCount(0);\n      setTestesOkCount(0);\n      setTestesUrgent(false);\n    }\n  }, [API]);\n  React.useEffect(() => {\n    fetchBothTestes();\n  }, [fetchBothTestes]);\n  React.useEffect(() => {\n    if (openTestesModal) fetchBothTestes();\n  }, [openTestesModal, fetchBothTestes]);\n\n  // carregar clientes para mapear nomes por cliente_id\n  React.useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const res = await fetch(`${API}/clientes/`);\n        if (!res.ok) return;\n        const data = await res.json();\n        if (!mounted) return;\n        setClientes(Array.isArray(data) ? data : []);\n      } catch (e) {\n        if (mounted) setClientes([]);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, [API]);\n  const allDashboardCards = [{\n    title: 'Clientes',\n    description: 'Gestão de clientes',\n    icon: People,\n    color: '#3b82f6',\n    path: '/clientes',\n    permission: 'clientes:read'\n  }, {\n    title: 'Obras',\n    description: 'Gerenciar contratos e obras',\n    icon: Construction,\n    color: '#10b981',\n    path: '/contratos',\n    permission: 'contratos:read'\n  }, {\n    title: 'Financeiro',\n    description: 'Controle financeiro e despesas',\n    icon: AttachMoney,\n    color: '#f59e0b',\n    path: '/financeiro',\n    permission: 'financeiro:read'\n  },\n  // Removed cards: Contratos, Despesas, Fornecedores, Orçamento Obra, Valor Materiais, Resumo Mensal\n  {\n    title: 'Testes de Loja',\n    description: 'Agendamentos e registros de testes',\n    icon: Storefront,\n    color: '#06b6d4',\n    path: '/testes-loja-menu',\n    permission: 'testes_loja:read'\n  }, {\n    title: 'Administrador',\n    description: 'Administração',\n    icon: ExitToApp,\n    color: '#6b7280',\n    path: '/cadastro-usuarios',\n    permission: 'admin:read',\n    adminOnly: true\n  }];\n\n  // Filtrar cards baseado nas permissões do usuário\n  const filteredCards = allDashboardCards.filter(card => {\n    if (card.adminOnly && !isAdmin()) return false;\n    return hasPermission(card.permission);\n  });\n  const handleCardClick = (path, title) => {\n    if (title === 'Testes de Loja') {\n      setOpenTestesModal(true);\n      return;\n    }\n    navigate(path);\n  };\n  const daysSince = dateStr => {\n    if (!dateStr) return null;\n    const d = new Date(dateStr);\n    if (isNaN(d.getTime())) return null;\n    return Math.floor((Date.now() - d.getTime()) / (1000 * 60 * 60 * 24));\n  };\n  const getLatestBy = (list, predicate) => {\n    if (!Array.isArray(list)) return null;\n    const candidates = list.filter(predicate);\n    if (!candidates.length) return null;\n    candidates.sort((a, b) => new Date(b.data_teste || b.data || b.created_at || 0) - new Date(a.data_teste || a.data || a.created_at || 0));\n    return candidates[0];\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 1200,\n        mx: 'auto',\n        background: 'rgba(255, 255, 255, 0.95)',\n        borderRadius: 3,\n        p: 4,\n        backdropFilter: 'blur(10px)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 4,\n          pb: 2,\n          borderBottom: '2px solid',\n          borderColor: theme.palette.grey[200]\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            sx: {\n              fontWeight: 700,\n              color: theme.palette.primary.main,\n              mb: 1\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: theme.palette.text.secondary,\n              fontWeight: 400\n            },\n            children: [\"Bem-vindo, \", user === null || user === void 0 ? void 0 : user.nome, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          startIcon: /*#__PURE__*/_jsxDEV(ExitToApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 24\n          }, this),\n          onClick: logout,\n          sx: {\n            borderRadius: 2,\n            px: 3,\n            py: 1.5,\n            fontWeight: 600\n          },\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        alignItems: \"stretch\",\n        sx: {\n          flexDirection: {\n            xs: 'column',\n            sm: 'row'\n          }\n        },\n        children: filteredCards.map((card, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              borderRadius: 3,\n              border: 'none',\n              boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\n              '&:hover': {\n                transform: 'translateY(-8px)',\n                boxShadow: '0 12px 40px rgba(0,0,0,0.15)'\n              },\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-between',\n              height: '100%'\n            },\n            onClick: () => handleCardClick(card.path),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                p: 2,\n                textAlign: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                flexGrow: 1,\n                minHeight: {\n                  xs: 160,\n                  sm: 200,\n                  md: 240\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                sx: {\n                  width: {\n                    xs: 56,\n                    sm: 64\n                  },\n                  height: {\n                    xs: 56,\n                    sm: 64\n                  },\n                  mx: 'auto',\n                  mb: 2,\n                  bgcolor: card.color,\n                  boxShadow: `0 8px 24px ${card.color}40`\n                },\n                children: /*#__PURE__*/_jsxDEV(card.icon, {\n                  sx: {\n                    fontSize: {\n                      xs: 24,\n                      sm: 32\n                    },\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 700,\n                  color: theme.palette.text.primary,\n                  mb: 1,\n                  fontSize: {\n                    xs: '1rem',\n                    sm: '1.05rem',\n                    md: '1.1rem'\n                  },\n                  textAlign: 'center'\n                },\n                children: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), card.title === 'Testes de Loja' && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'center',\n                  gap: 1,\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: testesCount === null ? '...' : String(testesCount),\n                  size: \"small\",\n                  color: \"primary\",\n                  clickable: true,\n                  onClick: e => {\n                    e.stopPropagation();\n                    setOpenTestesModal(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), testesUrgent && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"URGENTE\",\n                  size: \"small\",\n                  color: \"error\",\n                  clickable: true,\n                  onClick: e => {\n                    e.stopPropagation();\n                    setOpenTestesModal(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: theme.palette.text.secondary,\n                  lineHeight: 1.4,\n                  fontSize: {\n                    xs: '0.78rem',\n                    sm: '0.9rem'\n                  },\n                  mt: 1,\n                  textAlign: 'center',\n                  display: '-webkit-box',\n                  WebkitLineClamp: 2,\n                  WebkitBoxOrient: 'vertical',\n                  overflow: 'hidden'\n                },\n                title: card.description,\n                children: card.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mt: 6,\n          pt: 3,\n          borderTop: '1px solid',\n          borderColor: theme.palette.grey[200]\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: theme.palette.text.secondary,\n            fontWeight: 500\n          },\n          children: [\"Sistema de Gest\\xE3o de Obras \\xA9 \", new Date().getFullYear()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestesModal, {\n      open: openTestesModal,\n      onClose: () => setOpenTestesModal(false),\n      API: API,\n      navigate: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardHome, \"1XrjIaQimRcf2At4mG/AiSh2ZCY=\", false, function () {\n  return [useTheme, useNavigate, useAuth];\n});\n_c = DashboardHome;\nvar _c;\n$RefreshReg$(_c, \"DashboardHome\");","map":{"version":3,"names":["React","useEffect","useState","Box","Grid","Card","CardContent","Typography","Avatar","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","List","ListItem","ListItemText","IconButton","CloseIcon","TestesModal","useTheme","useNavigate","useAuth","Construction","People","AttachMoney","Inventory","Science","ExitToApp","Storefront","jsxDEV","_jsxDEV","DashboardHome","_s","theme","navigate","user","hasPermission","logout","isAdmin","API","process","env","REACT_APP_API_URL","testesCount","setTestesCount","testesUrgent","setTestesUrgent","testesList","setTestesList","testesArList","setTestesArList","clientes","setClientes","testesOffCount","setTestesOffCount","testesOkCount","setTestesOkCount","openTestesModal","setOpenTestesModal","testesFilter","setTestesFilter","testesSortOverdue","setTestesSortOverdue","selectedTest","setSelectedTest","openTestDetail","setOpenTestDetail","getClienteNomeById","id","c","find","x","Number","nome","fetchBothTestes","useCallback","resGer","resAr","Promise","all","fetch","dataGer","dataAr","ok","json","resolve","listGer","Array","isArray","listAr","count","length","off","filter","t","status","toString","toUpperCase","e","mounted","res","data","allDashboardCards","title","description","icon","color","path","permission","adminOnly","filteredCards","card","handleCardClick","daysSince","dateStr","d","Date","isNaN","getTime","Math","floor","now","getLatestBy","list","predicate","candidates","sort","a","b","data_teste","created_at","sx","minHeight","background","p","children","maxWidth","mx","borderRadius","backdropFilter","display","justifyContent","alignItems","mb","pb","borderBottom","borderColor","palette","grey","variant","fontWeight","primary","main","fileName","_jsxFileName","lineNumber","columnNumber","text","secondary","startIcon","onClick","px","py","container","spacing","flexDirection","xs","sm","map","index","item","md","cursor","transition","border","boxShadow","transform","height","textAlign","flexGrow","width","bgcolor","fontSize","gap","label","String","size","clickable","stopPropagation","lineHeight","mt","WebkitLineClamp","WebkitBoxOrient","overflow","pt","borderTop","getFullYear","open","onClose","_c","$RefreshReg$"],"sources":["D:/download/240825gestao/gestao/frontend/src/pages/DashboardHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { \r\n  Box, \r\n  Grid, \r\n  Card, \r\n  CardContent, \r\n  Typography, \r\n  Avatar,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TestesModal from '../components/TestesModal';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {\r\n  Construction,\r\n  People,\r\n  AttachMoney,\r\n  Inventory,\r\n  Science,\r\n  ExitToApp\r\n} from '@mui/icons-material';\r\nimport { Storefront } from '@mui/icons-material';\r\n\r\nexport default function DashboardHome() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const { user, hasPermission, logout, isAdmin } = useAuth();\r\n  const API = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n  const [testesCount, setTestesCount] = useState(null);\r\n  const [testesUrgent, setTestesUrgent] = useState(false);\r\n  const [testesList, setTestesList] = useState([]); // Gerador\r\n  const [testesArList, setTestesArList] = useState([]); // Ar Condicionado\r\n  const [clientes, setClientes] = useState([]);\r\n  const [testesOffCount, setTestesOffCount] = useState(0);\r\n  const [testesOkCount, setTestesOkCount] = useState(0);\r\n  const [openTestesModal, setOpenTestesModal] = useState(false);\r\n  const [testesFilter, setTestesFilter] = useState('all'); // all | ok | alerta | sem\r\n  const [testesSortOverdue, setTestesSortOverdue] = useState(false);\r\n  const [selectedTest, setSelectedTest] = useState(null);\r\n  const [openTestDetail, setOpenTestDetail] = useState(false);\r\n  const getClienteNomeById = (id) => {\r\n    const c = clientes.find((x) => Number(x.id) === Number(id));\r\n    return c ? c.nome : `Cliente ${id ?? ''}`;\r\n  };\r\n\r\n  const fetchBothTestes = React.useCallback(async () => {\r\n    try {\r\n      const [resGer, resAr] = await Promise.all([\r\n        fetch(`${API}/testes-loja/`),\r\n        fetch(`${API}/testes-ar-condicionado/`)\r\n      ]);\r\n      const [dataGer, dataAr] = await Promise.all([\r\n        resGer.ok ? resGer.json() : Promise.resolve([]),\r\n        resAr.ok ? resAr.json() : Promise.resolve([])\r\n      ]);\r\n      const listGer = Array.isArray(dataGer) ? dataGer : [];\r\n      const listAr = Array.isArray(dataAr) ? dataAr : [];\r\n      const count = listGer.length; // métricas do card baseadas em Gerador\r\n      const off = listGer.filter(t => (t.status || '').toString().toUpperCase() === 'OFF').length;\r\n      const ok = count - off;\r\n      setTestesList(listGer);\r\n      setTestesArList(listAr);\r\n      setTestesCount(count);\r\n      setTestesOffCount(off);\r\n      setTestesOkCount(ok);\r\n      setTestesUrgent(off > 0);\r\n    } catch (e) {\r\n      setTestesList([]);\r\n      setTestesArList([]);\r\n      setTestesCount(0);\r\n      setTestesOffCount(0);\r\n      setTestesOkCount(0);\r\n      setTestesUrgent(false);\r\n    }\r\n  }, [API]);\r\n\r\n  React.useEffect(() => { fetchBothTestes(); }, [fetchBothTestes]);\r\n  React.useEffect(() => { if (openTestesModal) fetchBothTestes(); }, [openTestesModal, fetchBothTestes]);\r\n\r\n  // carregar clientes para mapear nomes por cliente_id\r\n  React.useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(`${API}/clientes/`);\r\n        if (!res.ok) return;\r\n        const data = await res.json();\r\n        if (!mounted) return;\r\n        setClientes(Array.isArray(data) ? data : []);\r\n      } catch (e) {\r\n        if (mounted) setClientes([]);\r\n      }\r\n    })();\r\n    return () => { mounted = false; };\r\n  }, [API]);\r\n\r\n  const allDashboardCards = [\r\n    {\r\n      title: 'Clientes',\r\n      description: 'Gestão de clientes',\r\n      icon: People,\r\n      color: '#3b82f6',\r\n      path: '/clientes',\r\n      permission: 'clientes:read'\r\n    },\r\n    {\r\n      title: 'Obras',\r\n      description: 'Gerenciar contratos e obras',\r\n      icon: Construction,\r\n      color: '#10b981',\r\n      path: '/contratos',\r\n      permission: 'contratos:read'\r\n    },\r\n    {\r\n      title: 'Financeiro',\r\n      description: 'Controle financeiro e despesas',\r\n      icon: AttachMoney,\r\n      color: '#f59e0b',\r\n      path: '/financeiro',\r\n      permission: 'financeiro:read'\r\n    },\r\n  // Removed cards: Contratos, Despesas, Fornecedores, Orçamento Obra, Valor Materiais, Resumo Mensal\r\n    {\r\n      title: 'Testes de Loja',\r\n      description: 'Agendamentos e registros de testes',\r\n      icon: Storefront,\r\n      color: '#06b6d4',\r\n      path: '/testes-loja-menu',\r\n      permission: 'testes_loja:read'\r\n    },\r\n    {\r\n      title: 'Administrador',\r\n      description: 'Administração',\r\n      icon: ExitToApp,\r\n      color: '#6b7280',\r\n      path: '/cadastro-usuarios',\r\n      permission: 'admin:read',\r\n      adminOnly: true\r\n    }\r\n  ];\r\n\r\n  // Filtrar cards baseado nas permissões do usuário\r\n  const filteredCards = allDashboardCards.filter(card => {\r\n    if (card.adminOnly && !isAdmin()) return false;\r\n    return hasPermission(card.permission);\r\n  });\r\n\r\n  const handleCardClick = (path, title) => {\r\n    if (title === 'Testes de Loja') {\r\n      setOpenTestesModal(true);\r\n      return;\r\n    }\r\n    navigate(path);\r\n  };\r\n\r\n  const daysSince = (dateStr) => {\r\n    if (!dateStr) return null;\r\n    const d = new Date(dateStr);\r\n    if (isNaN(d.getTime())) return null;\r\n    return Math.floor((Date.now() - d.getTime()) / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  const getLatestBy = (list, predicate) => {\r\n    if (!Array.isArray(list)) return null;\r\n    const candidates = list.filter(predicate);\r\n    if (!candidates.length) return null;\r\n    candidates.sort((a, b) => new Date(b.data_teste || b.data || b.created_at || 0) - new Date(a.data_teste || a.data || a.created_at || 0));\r\n    return candidates[0];\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      p: 3\r\n    }}>\r\n      <Box sx={{ \r\n        maxWidth: 1200, \r\n        mx: 'auto',\r\n        background: 'rgba(255, 255, 255, 0.95)',\r\n        borderRadius: 3,\r\n        p: 4,\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'center',\r\n          mb: 4,\r\n          pb: 2,\r\n          borderBottom: '2px solid',\r\n          borderColor: theme.palette.grey[200]\r\n        }}>\r\n          <Box>\r\n            <Typography variant=\"h3\" sx={{ \r\n              fontWeight: 700, \r\n              color: theme.palette.primary.main,\r\n              mb: 1\r\n            }}>\r\n              Dashboard\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ \r\n              color: theme.palette.text.secondary,\r\n              fontWeight: 400\r\n            }}>\r\n              Bem-vindo, {user?.nome}!\r\n            </Typography>\r\n          </Box>\r\n          \r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            startIcon={<ExitToApp />}\r\n            onClick={logout}\r\n            sx={{\r\n              borderRadius: 2,\r\n              px: 3,\r\n              py: 1.5,\r\n              fontWeight: 600\r\n            }}\r\n          >\r\n            Sair\r\n          </Button>\r\n        </Box>\r\n\r\n  {/* Cards Grid */}\r\n  <Grid container spacing={3} alignItems=\"stretch\" sx={{ flexDirection: { xs: 'column', sm: 'row' } }}>\r\n          {filteredCards.map((card, index) => (\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n              <Card\r\n                sx={{\r\n                  cursor: 'pointer',\r\n                  transition: 'all 0.3s ease',\r\n                  borderRadius: 3,\r\n                  border: 'none',\r\n                  boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\r\n                  '&:hover': {\r\n                    transform: 'translateY(-8px)',\r\n                    boxShadow: '0 12px 40px rgba(0,0,0,0.15)',\r\n                  },\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent: 'space-between',\r\n                  height: '100%'\r\n                }}\r\n                onClick={() => handleCardClick(card.path)}\r\n              >\r\n                <CardContent sx={{ p: 2, textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', flexGrow: 1, minHeight: { xs: 160, sm: 200, md: 240 } }}>\r\n                  <Avatar\r\n                    sx={{\r\n                      width: { xs: 56, sm: 64 },\r\n                      height: { xs: 56, sm: 64 },\r\n                      mx: 'auto',\r\n                      mb: 2,\r\n                      bgcolor: card.color,\r\n                      boxShadow: `0 8px 24px ${card.color}40`\r\n                    }}\r\n                  >\r\n                    <card.icon sx={{ fontSize: { xs: 24, sm: 32 }, color: 'white' }} />\r\n                  </Avatar>\r\n\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{\r\n                      fontWeight: 700,\r\n                      color: theme.palette.text.primary,\r\n                      mb: 1,\r\n                      fontSize: { xs: '1rem', sm: '1.05rem', md: '1.1rem' },\r\n                      textAlign: 'center'\r\n                    }}\r\n                  >\r\n                    {card.title}\r\n                  </Typography>\r\n                  {card.title === 'Testes de Loja' && (\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1, mb: 1 }}>\r\n                      <Chip\r\n                        label={testesCount === null ? '...' : String(testesCount)}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        clickable\r\n                        onClick={(e) => { e.stopPropagation(); setOpenTestesModal(true); }}\r\n                      />\r\n                      {testesUrgent && (\r\n                        <Chip\r\n                          label=\"URGENTE\"\r\n                          size=\"small\"\r\n                          color=\"error\"\r\n                          clickable\r\n                          onClick={(e) => { e.stopPropagation(); setOpenTestesModal(true); }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  )}\r\n                  \r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                      color: theme.palette.text.secondary,\r\n                      lineHeight: 1.4,\r\n                      fontSize: { xs: '0.78rem', sm: '0.9rem' },\r\n                      mt: 1,\r\n                      textAlign: 'center',\r\n                      display: '-webkit-box',\r\n                      WebkitLineClamp: 2,\r\n                      WebkitBoxOrient: 'vertical',\r\n                      overflow: 'hidden'\r\n                    }}\r\n                    title={card.description}\r\n                  >\r\n                    {card.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        {/* Footer */}\r\n        <Box sx={{ \r\n          textAlign: 'center', \r\n          mt: 6,\r\n          pt: 3,\r\n          borderTop: '1px solid',\r\n          borderColor: theme.palette.grey[200]\r\n        }}>\r\n          <Typography variant=\"body2\" sx={{ \r\n            color: theme.palette.text.secondary,\r\n            fontWeight: 500\r\n          }}>\r\n            Sistema de Gestão de Obras © {new Date().getFullYear()}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n  <TestesModal open={openTestesModal} onClose={() => setOpenTestesModal(false)} API={API} navigate={navigate} />\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}